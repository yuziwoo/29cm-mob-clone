{"version":3,"file":"static/js/278.75d33e69.chunk.js","mappings":"sIAGA,SAASA,IACL,MAAMC,GAAYC,EAAAA,EAAAA,SAAO,GAOzB,OANAC,EAAAA,EAAAA,IAA0B,KACtBF,EAAUG,SAAU,EACb,KACHH,EAAUG,SAAU,CAAK,IAE9B,IACIH,CACX,C,sCCLA,MAAMI,UAAwBC,EAAAA,UAC1BC,uBAAAA,CAAwBC,GACpB,MAAMC,EAAUC,KAAKC,MAAMC,SAASR,QACpC,GAAIK,GAAWD,EAAUK,YAAcH,KAAKC,MAAME,UAAW,CACzD,MAAMC,EAAOJ,KAAKC,MAAMI,QAAQX,QAChCU,EAAKE,OAASP,EAAQQ,cAAgB,EACtCH,EAAKI,MAAQT,EAAQU,aAAe,EACpCL,EAAKM,IAAMX,EAAQY,UACnBP,EAAKQ,KAAOb,EAAQc,UACxB,CACA,OAAO,IACX,CAIAC,kBAAAA,GAAuB,CACvBC,MAAAA,GACI,OAAOf,KAAKC,MAAMe,QACtB,EAEJ,SAASC,EAAQC,GAA0B,IAAzB,SAAEF,EAAQ,UAAEb,GAAWe,EACrC,MAAMC,GAAKC,EAAAA,EAAAA,SACLC,GAAM7B,EAAAA,EAAAA,QAAO,MACbY,GAAOZ,EAAAA,EAAAA,QAAO,CAChBgB,MAAO,EACPF,OAAQ,EACRI,IAAK,EACLE,KAAM,IAiCV,OAtBAU,EAAAA,EAAAA,qBAAmB,KACf,MAAM,MAAEd,EAAK,OAAEF,EAAM,IAAEI,EAAG,KAAEE,GAASR,EAAKV,QAC1C,GAAIS,IAAckB,EAAI3B,UAAYc,IAAUF,EACxC,OACJe,EAAI3B,QAAQ6B,QAAQC,YAAcL,EAClC,MAAMM,EAAQC,SAASC,cAAc,SAarC,OAZAD,SAASE,KAAKC,YAAYJ,GACtBA,EAAMK,OACNL,EAAMK,MAAMC,WAAW,oCAADC,OACDb,EAAE,yEAAAa,OAEdxB,EAAK,wCAAAwB,OACJ1B,EAAM,qCAAA0B,OACTtB,EAAG,sCAAAsB,OACFpB,EAAI,0CAIT,KACHc,SAASE,KAAKK,YAAYR,EAAM,CACnC,GACF,CAACtB,IACIP,EAAAA,cAAoBD,EAAiB,CAAEQ,UAAWA,EAAWD,SAAUmB,EAAKhB,QAASD,GAAQR,EAAAA,aAAmBoB,EAAU,CAAEK,QACxI,CC9DA,MAAMa,EAAgBhB,IAA4F,IAA3F,SAAEF,EAAQ,QAAEmB,EAAO,UAAEhC,EAAS,eAAEiC,EAAc,OAAEC,EAAM,sBAAEC,EAAqB,KAAEC,GAAOrB,EACzG,MAAMsB,GAAmBC,EAAAA,EAAAA,GAAYC,GAC/BvB,GAAKC,EAAAA,EAAAA,SACLuB,GAAUC,EAAAA,EAAAA,UAAQ,KAAM,CAC1BzB,KACAgB,UACAhC,YACAkC,SACAD,eAAiBS,IACbL,EAAiBM,IAAID,GAAS,GAC9B,IAAK,MAAME,KAAcP,EAAiBQ,SACtC,IAAKD,EACD,OAERX,GAAkBA,GAAgB,EAEtCa,SAAWJ,IACPL,EAAiBM,IAAID,GAAS,GACvB,IAAML,EAAiBU,OAAOL,OAQ7CP,OAAwBa,EAAY,CAAChD,IAiBrC,OAhBAyC,EAAAA,EAAAA,UAAQ,KACJJ,EAAiBY,SAAQ,CAACC,EAAGC,IAAQd,EAAiBM,IAAIQ,GAAK,IAAO,GACvE,CAACnD,IAKJP,EAAAA,WAAgB,MACXO,IACIqC,EAAiBpC,MAClBgC,GACAA,GAAgB,GACrB,CAACjC,IACS,cAAToC,IACAvB,EAAWpB,EAAAA,cAAoBqB,EAAU,CAAEd,UAAWA,GAAaa,IAE/DpB,EAAAA,cAAoB2D,EAAAA,EAAgBC,SAAU,CAAEC,MAAOd,GAAW3B,EAAS,EAEvF,SAAS0B,IACL,OAAO,IAAIgB,GACf,C,4BC3CA,MAAMC,EAAeC,GAAUA,EAAMN,KAAO,GAiD5C,MAAMO,EAAkB3C,IAAyH,IAAxH,SAAEF,EAAQ,OAAEqB,EAAM,QAAEF,GAAU,EAAI,eAAEC,EAAc,gBAAE0B,EAAe,sBAAExB,GAAwB,EAAI,KAAEC,EAAO,QAASrB,GACxI6C,EAAAA,EAAAA,IAAWD,EAAiB,4CAG5B,MAAME,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAAoBF,aC3DvD,WACI,MAAMzE,EAAYD,KACX6E,EAAmBC,IAAwBC,EAAAA,EAAAA,UAAS,GACrDL,GAAcM,EAAAA,EAAAA,cAAY,KAC5B/E,EAAUG,SAAW0E,EAAqBD,EAAoB,EAAE,GACjE,CAACA,IAMJ,MAAO,EADqBG,EAAAA,EAAAA,cAAY,IAAMC,EAAAA,GAAMC,WAAWR,IAAc,CAACA,IACjDG,EACjC,CD+CsEM,GAAiB,GAC7ElF,EAAYD,IAEZoF,EAjDV,SAAsB1D,GAClB,MAAM2D,EAAW,GAMjB,OAJAC,EAAAA,SAASxB,QAAQpC,GAAW4C,KACpBiB,EAAAA,EAAAA,gBAAejB,IACfe,EAASG,KAAKlB,EAAM,IAErBe,CACX,CAyC6BI,CAAa/D,GACtC,IAAIgE,EAAmBN,EACvB,MAAMO,GAAkBzF,EAAAA,EAAAA,QAAO,IAAIkE,KAAOhE,QAGpCwF,GAAkB1F,EAAAA,EAAAA,QAAOwF,GAEzBG,GAAc3F,EAAAA,EAAAA,QAAO,IAAIkE,KAAOhE,QAGhC0F,GAAkB5F,EAAAA,EAAAA,SAAO,GE1EnC,IAA0B6F,EFqFtB,IAVA5F,EAAAA,EAAAA,IAA0B,KACtB2F,EAAgB1F,SAAU,EAnElC,SAA2BsB,EAAUmE,GACjCnE,EAASoC,SAASQ,IACd,MAAMN,EAAMK,EAAYC,GACxBuB,EAAYrC,IAAIQ,EAAKM,EAAM,GAEnC,CA+DQ0B,CAAkBZ,EAAkBS,GACpCD,EAAgBxF,QAAUsF,CAAgB,IE9ExBK,EFgFL,KACbD,EAAgB1F,SAAU,EAC1ByF,EAAYI,QACZN,EAAgBM,OAAO,GElFpBC,EAAAA,EAAAA,YAAU,IAAM,IAAMH,KAAY,IFoFrCD,EAAgB1F,QAChB,OAAQE,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMoF,EAAiBS,KAAK7B,GAAWhE,EAAAA,cAAoBsC,EAAe,CAAEoB,IAAKK,EAAYC,GAAQzD,WAAW,EAAMgC,UAASA,QAAUgB,EAAmBb,sBAAuBA,EAAuBC,KAAMA,GAAQqB,MAGxQoB,EAAmB,IAAIA,GAGvB,MAAMU,EAAcR,EAAgBxF,QAAQ+F,IAAI9B,GAC1CgC,EAAajB,EAAiBe,IAAI9B,GAElCiC,EAAaF,EAAYG,OAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYE,IAAK,CACjC,MAAMxC,EAAMoC,EAAYI,IACS,IAA7BH,EAAWI,QAAQzC,IAAgB2B,EAAgBe,IAAI1C,IACvD2B,EAAgBnC,IAAIQ,OAAKH,EAEjC,CA4DA,MAzDa,SAATZ,GAAmB0C,EAAgB7E,OACnC4E,EAAmB,IAIvBC,EAAgB7B,SAAQ,CAAC6C,EAAW3C,KAEhC,IAAiC,IAA7BqC,EAAWI,QAAQzC,GACnB,OACJ,MAAMM,EAAQuB,EAAYe,IAAI5C,GAC9B,IAAKM,EACD,OACJ,MAAMuC,EAAiBT,EAAYK,QAAQzC,GAC3C,IAAI8C,EAAmBH,EACvB,IAAKG,EAAkB,CACnB,MAAMC,EAASA,KAEXpB,EAAgB/B,OAAOI,GAIvB,MAAMgD,EAAeC,MAAMC,KAAKrB,EAAYsB,QAAQC,QAAQC,IAAchB,EAAWiB,SAASD,KAa9F,GAXAL,EAAalD,SAASyD,GAAgB1B,EAAYjC,OAAO2D,KAEzD3B,EAAgBxF,QAAUgF,EAAiBgC,QAAQI,IAC/C,MAAMC,EAAkBpD,EAAYmD,GACpC,OAEAC,IAAoBzD,GAEhBgD,EAAaM,SAASG,EAAiB,KAG1C9B,EAAgB7E,KAAM,CACvB,IAA0B,IAAtBb,EAAUG,QACV,OACJsE,IACA5B,GAAkBA,GACtB,GAEJgE,EAAoBxG,EAAAA,cAAoBsC,EAAe,CAAEoB,IAAKK,EAAYC,GAAQzD,WAAW,EAAOiC,eAAgBiE,EAAQhE,OAAQA,EAAQC,sBAAuBA,EAAuBC,KAAMA,GAAQqB,GACxMqB,EAAgBnC,IAAIQ,EAAK8C,EAC7B,CACApB,EAAiBgC,OAAOb,EAAgB,EAAGC,EAAiB,IAIhEpB,EAAmBA,EAAiBS,KAAK7B,IACrC,MAAMN,EAAMM,EAAMN,IAClB,OAAO2B,EAAgBe,IAAI1C,GAAQM,EAAUhE,EAAAA,cAAoBsC,EAAe,CAAEoB,IAAKK,EAAYC,GAAQzD,WAAW,EAAMmC,sBAAuBA,EAAuBC,KAAMA,GAAQqB,EAAO,IAO3LhE,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMqF,EAAgB7E,KAC5D4E,EACAA,EAAiBS,KAAK7B,IAAUqD,EAAAA,EAAAA,cAAarD,KAAQ,E,kCG9J/D,MAgBA,EAhB4B1C,IAA6C,IAA5C,SAAEF,GAAoCE,EACjE,OACEgG,EAAAA,EAAAA,KAACrD,EAAe,CAAA7C,UACdkG,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CACTjF,QAASkF,EAAAA,EAAYC,SAASnF,QAC9BoF,QAASF,EAAAA,EAAYC,SAASC,QAC9BC,WAAYH,EAAAA,EAAYC,SAASE,WACjCC,KAAMJ,EAAAA,EAAYC,SAASG,KAC3BhG,MAAO,CAAEiG,SAAU,WAAYlH,MAAO,QAASQ,SAE9CA,KAEa,C,8HChBtB,MAAM2G,EAAYC,EAAAA,GAAOR,IAAGS,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wGAIFC,EAAAA,EAAMC,MAAMC,OAGhCC,EAASN,EAAAA,GAAOO,GAAEC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wNAGRC,EAAAA,EAAMC,MAAMC,OAWtBI,EAAQT,EAAAA,GAAOU,GAAEC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,uEACLC,EAAAA,EAAMS,QAAQC,SAChBvH,IAAA,IAAC,UAAEwH,GAAWxH,EAAA,OAAMwH,EAAYX,EAAAA,EAAMC,MAAMW,MAAQ,aAAa,IAI3EC,GAAOC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,8JAGLC,EAAAA,EAAMC,MAAMe,OA0FVC,EAAiB,CAC5BrB,YACAO,SACAG,QACAY,UAtFgBrB,EAAAA,GAAOsB,EAACC,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,gBACtBc,GAsFFQ,aAnFmBxB,EAAAA,GAAOR,IAAGiC,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,qFAoF7BwB,eA9EqB1B,EAAAA,GAAOO,GAAEoB,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,gRACjBC,EAAAA,EAAMS,QAAQC,SA8E3Be,cA/DoB5B,EAAAA,GAAOU,GAAEmB,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,gPAETC,EAAAA,EAAMC,MAAMe,OAIrBW,IAAA,IAAC,UAAEhB,GAAWgB,EAAA,OAAMhB,EAAY,EAAI,GAAI,IA0DnDiB,kBAlDwB/B,EAAAA,GAAOsB,EAACU,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,+CAC9Bc,GAkDFiB,gBA9CsBjC,EAAAA,GAAOO,GAAE2B,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,0NAOlBC,EAAAA,EAAMS,QAAQC,SAwC3BsB,eAjCqBnC,EAAAA,GAAOU,GAAE0B,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,sNAkC9BmC,mBArByBrC,EAAAA,GAAOsB,EAACgB,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,+CAC/Bc,GAqBFuB,MAjBYvC,EAAAA,GAAOR,IAAGgD,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,4C,qDC7GxB,MAmIA,EAnIiBuC,KAKf,MAAOC,EAAaC,IAAkBlG,EAAAA,EAAAA,UAASmG,EAAAA,GAAa,GAAGC,QACxDC,EAAgBC,IAAqBtG,EAAAA,EAAAA,UAC1CmG,EAAAA,GAAa,GAAGI,cAAcnF,KAAI,CAACoF,EAAUC,KAAK,CAAQD,WAAUE,OAAkB,IAAVD,QAEvEE,EAAiBC,IAAsB5G,EAAAA,EAAAA,UAASmG,EAAAA,GAAa,GAAGU,iBAEvE1F,EAAAA,EAAAA,YAAU,KACR,MAAMqF,EAAWL,EAAAA,GAAaW,MAAKjK,IAAA,IAAC,MAAEuJ,GAAOvJ,EAAA,OAAKuJ,IAAUH,CAAW,IACvE,QAAiBnH,IAAb0H,EAAwB,OAE5B,MAAMO,EAAoBP,EAASD,cAAcnF,KAAI,CAACoF,EAAUC,KAAK,CACnED,WACAE,OAAkB,IAAVD,MAEVH,EAAkBS,GAElB,MAAMC,EAAqBR,EAASK,eACpCD,EAAmBI,EAAmB,GACrC,CAACf,IAEJ,MAAMgB,GAAmBhH,EAAAA,EAAAA,cAAamG,IACpCF,EAAeE,EAAM,GACpB,IAEGc,GAA2BjH,EAAAA,EAAAA,cAAakH,IAC5Cb,GAAmBc,GACjBA,EAAahG,KAAIiE,IAAA,IAAC,SAAEmB,GAAUnB,EAAA,MAAM,CAAEmB,WAAUE,OAAQS,IAAgBX,EAAU,KACnF,GACA,KAEG,SAAEa,IAAaC,EAAAA,EAAAA,KAEfC,GAA4BtH,EAAAA,EAAAA,cAC/B4G,IAA4B,IAADW,EAC1B,MAAMC,EAAiB,CACrBrB,MAAOH,EACPM,cACEF,EAAe7E,OAAS,EAA+C,QAA9CgG,EAAGnB,EAAeS,MAAKY,IAAA,IAAC,OAAEhB,GAAQgB,EAAA,OAAKhB,CAAM,WAAC,IAAAc,OAAA,EAA3CA,EAA6ChB,SAAW,KACtFK,kBAGIc,EAAc,GACpB,IAAK,MAAOC,EAAexI,KAAUyI,OAAOC,QAAQL,GACpC,OAAVrI,GACFuI,EAAYlH,KAAK,GAAD9C,OAAIiK,EAAa,KAAAjK,OAAIyB,IAIzCiI,EAASU,EAAAA,EAAWC,eAAiB,KAAOL,EAAYM,KAAK,KAAK,GAEpE,CAAC5B,EAAgBgB,EAAUpB,IAG7B,OACEiC,EAAAA,EAAAA,MAACC,EAAE7E,UAAS,CAAA3G,SAAA,EACVkG,EAAAA,EAAAA,KAACsF,EAAEtE,OAAM,CAAAlH,SACNwJ,EAAAA,GAAa/E,KAAIgH,IAAA,IAAC,MAAEhC,GAAOgC,EAAA,OAC1BvF,EAAAA,EAAAA,KAACsF,EAAEnE,MAAK,CAENK,UAAW4B,IAAgBG,EAC3BiC,QAASA,KACPpB,EAAiBb,EAAM,EACvBzJ,UAEFkG,EAAAA,EAAAA,KAACsF,EAAEvD,UAAS,CAAAjI,SAAEyJ,KANTA,EAOG,OAId8B,EAAAA,EAAAA,MAACC,EAAEpD,aAAY,CAAApI,SAAA,EACbkG,EAAAA,EAAAA,KAACsF,EAAElD,eAAc,CAAAtI,SACd0J,EAAe7E,OAAS,EACvB6E,EAAejF,KAAIkH,IAAA,IAAC,SAAE9B,EAAQ,OAAEE,GAAQ4B,EAAA,OACtCzF,EAAAA,EAAAA,KAAC0F,EAAAA,EAAY,CAEXnL,MAAO,CAAEoL,YAAa,OACtBH,QAASA,KACPnB,EAAyBV,EAAS,EAClC7J,UAEFkG,EAAAA,EAAAA,KAACsF,EAAEhD,cAAa,CAACd,UAAWqC,EAAO/J,UACjCkG,EAAAA,EAAAA,KAACsF,EAAE7C,kBAAiB,CAAA3I,SAAE6J,OAPnBA,EASQ,KAGjB3D,EAAAA,EAAAA,KAAC0F,EAAAA,EAAY,CAAA5L,UACXkG,EAAAA,EAAAA,KAACsF,EAAEhD,cAAa,CAACd,WAAW,EAAK1H,UAC/BkG,EAAAA,EAAAA,KAACsF,EAAE7C,kBAAiB,CAAA3I,SAAC,eAM7BuL,EAAAA,EAAAA,MAACC,EAAE3C,gBAAe,CAAA7I,SAAA,EAChBuL,EAAAA,EAAAA,MAACC,EAAEzC,eAAc,CACf2C,QAASA,KACPd,EAA0B,eAAK,EAC/B5K,SAAA,EAEFkG,EAAAA,EAAAA,KAACsF,EAAEvC,mBAAkB,CAAAjJ,SAAC,kBACtBkG,EAAAA,EAAAA,KAACsF,EAAErC,MAAK,CAAAnJ,UACNkG,EAAAA,EAAAA,KAAC4F,EAAAA,EAAe,CAAC9E,MAAOD,EAAAA,EAAMC,MAAM+E,aAIvC/B,EAAgBvF,KAAKoF,IACpB3D,EAAAA,EAAAA,KAAC0F,EAAAA,EAAY,CAAA5L,UACXuL,EAAAA,EAAAA,MAACC,EAAEzC,eAAc,CACf2C,QAASA,KACPd,EAA0Bf,EAAS,EACnC7J,SAAA,EAEFkG,EAAAA,EAAAA,KAACsF,EAAEvC,mBAAkB,CAAAjJ,SAAE6J,KACvB3D,EAAAA,EAAAA,KAACsF,EAAErC,MAAK,CAAAnJ,UACNkG,EAAAA,EAAAA,KAAC4F,EAAAA,EAAe,CAAC9E,MAAOD,EAAAA,EAAMC,MAAM+E,cARvBlC,aAeb,E,gBCtIlB,MAEamC,EAAY,CACvBC,KAHWrF,EAAAA,GAAOsF,QAAOrF,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,SCY3B,EAVqBqF,KAEjBjG,EAAAA,EAAAA,KAACkG,EAAAA,EAAmB,CAAApM,UAClBkG,EAAAA,EAAAA,KAACsF,EAAES,KAAI,CAAAjM,UACLkG,EAAAA,EAAAA,KAACmD,EAAQ,O","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","components/common/motion/CommonPageAnimation/CommonPageAnimation.tsx","components/category/Category/Category.styled.ts","components/category/Category/Category.tsx","pages/CategoryPage/CategoryPage.styled.ts","pages/CategoryPage/CategoryPage.tsx"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { AnimatePresence, motion } from 'framer-motion';\nimport { motionStyle } from '../../../../styles/motion';\n\ninterface CommonPageAnimationProps {\n  children: React.ReactNode;\n}\n\nconst CommonPageAnimation = ({ children }: CommonPageAnimationProps) => {\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={motionStyle.pageOpen.initial}\n        animate={motionStyle.pageOpen.animate}\n        transition={motionStyle.pageOpen.transition}\n        exit={motionStyle.pageOpen.exit}\n        style={{ position: 'relative', width: '100%' }}\n      >\n        {children}\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nexport default CommonPageAnimation;\n","import styled, { css } from 'styled-components';\nimport { theme } from '../../../styles/theme';\n\nconst Component = styled.div`\n  width: 100%;\n  display: flex;\n  height: calc(100vh - 80px);\n  border-top: 1px solid ${theme.color.GRAY1};\n`;\n\nconst Groups = styled.ul`\n  width: 120px;\n  height: 100%;\n  background: ${theme.color.GRAY1};\n  padding-bottom: 150px;\n  overflow: auto;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst Group = styled.li<{ $isActive: boolean }>`\n  padding: 20px ${theme.padding.DEFAULT};\n  background: ${({ $isActive }) => ($isActive ? theme.color.WHITE : 'transparent')};\n  cursor: pointer;\n`;\n\nconst font = css`\n  font-size: 15px;\n  font-weight: 600;\n  color: ${theme.color.BLACK};\n  user-select: none;\n\n  @media screen and (max-width: 400px) {\n    font-size: 13px;\n  }\n`;\n\nconst GroupText = styled.p`\n  ${font}\n`;\n\nconst CategoryWrap = styled.div`\n  width: calc(100% - 120px);\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CategoryLarges = styled.ul`\n  padding: 0 ${theme.padding.DEFAULT};\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: nowrap;\n  overflow: auto;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n  min-height: 63px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst CategoryLarge = styled.li<{ $isActive: boolean }>`\n  cursor: pointer;\n  border: 1px solid ${theme.color.BLACK};\n  margin: 16px 0;\n  padding: 4px 14px;\n  border-radius: 28px;\n  opacity: ${({ $isActive }) => ($isActive ? 1 : 0.35)};\n  transition: opacity 0.15s;\n\n  @media screen and (max-width: 400px) {\n    padding: 3px 12px;\n  }\n`;\n\nconst CategoryLargeText = styled.p`\n  ${font};\n  text-transform: uppercase;\n`;\n\nconst CategoryMediums = styled.ul`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n  padding: 0 ${theme.padding.DEFAULT} 150px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst CategoryMedium = styled.li`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px 0;\n  cursor: pointer;\n\n  @media screen and (max-width: 400px) {\n    padding: 16px 0;\n  }\n`;\n\nconst CategoryMediumText = styled.p`\n  ${font};\n  text-transform: uppercase;\n`;\n\nconst Arrow = styled.div`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const ComponentStyle = {\n  Component,\n  Groups,\n  Group,\n  GroupText,\n  CategoryWrap,\n  CategoryLarges,\n  CategoryLarge,\n  CategoryLargeText,\n  CategoryMediums,\n  CategoryMedium,\n  CategoryMediumText,\n  Arrow,\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { mockCategory } from '../../../mock/product';\nimport { ComponentStyle as S } from './Category.styled';\nimport CommonButton from '../../common/motion/CommonButton/CommonButton';\nimport IconRightArrow2 from '../../icons/IconRightArrow2';\nimport { theme } from '../../../styles/theme';\nimport { useRouter } from '../../../hooks/useRouter';\nimport { ROUTE_PATH } from '../../../constants/path';\n\nconst Category = () => {\n  /**\n   * 카테고리 페이지의 카테고리 컴포넌트입니다. 이 컴포넌트에서 카테고리를 설정하고, CategoryDetailPage로 이동시킵니다.\n   */\n\n  const [activeGroup, setActiveGroup] = useState(mockCategory[0].group);\n  const [categoryLarges, setCategoryLarges] = useState(\n    mockCategory[0].categoryLarge.map((category, index) => ({ category, active: index === 0 }))\n  );\n  const [categoryMediums, setCategoryMediums] = useState(mockCategory[0].categoryMedium);\n\n  useEffect(() => {\n    const category = mockCategory.find(({ group }) => group === activeGroup);\n    if (category === undefined) return;\n\n    const newCategoryLarges = category.categoryLarge.map((category, index) => ({\n      category,\n      active: index === 0,\n    }));\n    setCategoryLarges(newCategoryLarges);\n\n    const newCategoryMediums = category.categoryMedium;\n    setCategoryMediums(newCategoryMediums);\n  }, [activeGroup]);\n\n  const handleClickGroup = useCallback((group: string) => {\n    setActiveGroup(group);\n  }, []);\n\n  const handleClickCategoryLarge = useCallback((newCategory: string) => {\n    setCategoryLarges((prevCategory) =>\n      prevCategory.map(({ category }) => ({ category, active: newCategory === category }))\n    );\n  }, []);\n\n  const { navigate } = useRouter();\n\n  const handleClickCategoryMedium = useCallback(\n    (categoryMedium: string) => {\n      const activeCategory = {\n        group: activeGroup,\n        categoryLarge:\n          categoryLarges.length > 0 ? categoryLarges.find(({ active }) => active)?.category : null,\n        categoryMedium,\n      };\n\n      const queryString = [];\n      for (const [categoryClass, value] of Object.entries(activeCategory)) {\n        if (value !== null) {\n          queryString.push(`${categoryClass}=${value}`);\n        }\n      }\n\n      navigate(ROUTE_PATH.categoryDetail + '/?' + queryString.join('&'));\n    },\n    [categoryLarges, navigate, activeGroup]\n  );\n\n  return (\n    <S.Component>\n      <S.Groups>\n        {mockCategory.map(({ group }) => (\n          <S.Group\n            key={group}\n            $isActive={activeGroup === group}\n            onClick={() => {\n              handleClickGroup(group);\n            }}\n          >\n            <S.GroupText>{group}</S.GroupText>\n          </S.Group>\n        ))}\n      </S.Groups>\n\n      <S.CategoryWrap>\n        <S.CategoryLarges>\n          {categoryLarges.length > 0 ? (\n            categoryLarges.map(({ category, active }) => (\n              <CommonButton\n                key={category}\n                style={{ marginRight: '8px' }}\n                onClick={() => {\n                  handleClickCategoryLarge(category);\n                }}\n              >\n                <S.CategoryLarge $isActive={active}>\n                  <S.CategoryLargeText>{category}</S.CategoryLargeText>\n                </S.CategoryLarge>\n              </CommonButton>\n            ))\n          ) : (\n            <CommonButton>\n              <S.CategoryLarge $isActive={true}>\n                <S.CategoryLargeText>ALL</S.CategoryLargeText>\n              </S.CategoryLarge>\n            </CommonButton>\n          )}\n        </S.CategoryLarges>\n\n        <S.CategoryMediums>\n          <S.CategoryMedium\n            onClick={() => {\n              handleClickCategoryMedium('전체');\n            }}\n          >\n            <S.CategoryMediumText>전체</S.CategoryMediumText>\n            <S.Arrow>\n              <IconRightArrow2 color={theme.color.GRAY5} />\n            </S.Arrow>\n          </S.CategoryMedium>\n\n          {categoryMediums.map((category) => (\n            <CommonButton key={category}>\n              <S.CategoryMedium\n                onClick={() => {\n                  handleClickCategoryMedium(category);\n                }}\n              >\n                <S.CategoryMediumText>{category}</S.CategoryMediumText>\n                <S.Arrow>\n                  <IconRightArrow2 color={theme.color.GRAY5} />\n                </S.Arrow>\n              </S.CategoryMedium>\n            </CommonButton>\n          ))}\n        </S.CategoryMediums>\n      </S.CategoryWrap>\n    </S.Component>\n  );\n};\n\nexport default Category;\n","import styled from 'styled-components';\n\nconst Page = styled.section``;\n\nexport const PageStyle = {\n  Page\n};","import Category from '../../components/category/Category/Category';\nimport CommonPageAnimation from '../../components/common/motion/CommonPageAnimation/CommonPageAnimation';\nimport { PageStyle as S } from './CategoryPage.styled';\n\nconst CategoryPage = () => {\n  return (\n    <CommonPageAnimation>\n      <S.Page>\n        <Category />\n      </S.Page>\n    </CommonPageAnimation>\n  );\n};\n\nexport default CategoryPage;\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","_ref","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","forceRender","useContext","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useState","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement","_jsx","motion","div","motionStyle","pageOpen","animate","transition","exit","position","Component","styled","_templateObject","_taggedTemplateLiteral","theme","color","GRAY1","Groups","ul","_templateObject2","Group","li","_templateObject3","padding","DEFAULT","$isActive","WHITE","font","css","_templateObject4","BLACK","ComponentStyle","GroupText","p","_templateObject5","CategoryWrap","_templateObject6","CategoryLarges","_templateObject7","CategoryLarge","_templateObject8","_ref2","CategoryLargeText","_templateObject9","CategoryMediums","_templateObject10","CategoryMedium","_templateObject11","CategoryMediumText","_templateObject12","Arrow","_templateObject13","Category","activeGroup","setActiveGroup","mockCategory","group","categoryLarges","setCategoryLarges","categoryLarge","category","index","active","categoryMediums","setCategoryMediums","categoryMedium","find","newCategoryLarges","newCategoryMediums","handleClickGroup","handleClickCategoryLarge","newCategory","prevCategory","navigate","useRouter","handleClickCategoryMedium","_categoryLarges$find","activeCategory","_ref3","queryString","categoryClass","Object","entries","ROUTE_PATH","categoryDetail","join","_jsxs","S","_ref4","onClick","_ref5","CommonButton","marginRight","IconRightArrow2","GRAY5","PageStyle","Page","section","CategoryPage","CommonPageAnimation"],"sourceRoot":""}