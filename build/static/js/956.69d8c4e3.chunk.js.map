{"version":3,"file":"static/js/956.69d8c4e3.chunk.js","mappings":"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","sources":["components/skeleton/common/SkeletonLoading.tsx","pages/CategoryDetailPage/CategoryDetailPage.styled.ts","components/category/CategoryProducts/CategoryProducts.styled.ts","components/category/CategoryProducts/CategoryProducts.tsx","mock/getCategoryResultProducts.ts","pages/CategoryDetailPage/CategoryDetailPage.tsx"],"sourcesContent":["const SkeletonLoading = () => {\n  return (\n    <video\n      style={{ display: 'block', width: '100%' }}\n      autoPlay\n      muted\n      loop\n      playsInline\n      poster=\"../img/system/loading.png\"\n    >\n      <source src=\"../img/system/loading.webm\" type=\"video/webm\" />\n      <source src=\"../img/system/loading.mp4\" type=\"video/mp4\" />\n    </video>\n  );\n};\n\nexport default SkeletonLoading;\n","import styled from 'styled-components';\n\nconst Page = styled.section``;\n\nexport const PageStyle = {\n  Page\n};","import styled from 'styled-components';\nimport { theme } from '../../../styles/theme';\n\nconst Component = styled.div`\n  padding: ${theme.padding.BODY_WITH_BOTTOM_MARGIN};\n`;\n\nconst Loading = styled.div`\n  margin: 6rem auto;\n  width: 60px;\n`;\n\nconst Title = styled.h1`\n  padding-top: 2rem;\n  font-size: 16px;\n  font-weight: 700;\n  color: ${theme.color.BLACK};\n`;\n\nconst ProductList = styled.ul`\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  width: 100%;\n`;\n\nconst Product = styled.li`\n  width: 50%;\n`;\n\nexport const ComponentStyle = {\n  Component,\n  Loading,\n  Title,\n  ProductList,\n  Product,\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { useProduct } from '../../../hooks/product/useProduct';\nimport SkeletonLoading from '../../skeleton/common/SkeletonLoading';\nimport { ComponentStyle as S } from './CategoryProducts.styled';\nimport { CATEGORY_PARAMS } from '../../../constants/path';\nimport ListProductBasic from '../../product/ListProductBasic/ListProductBasic';\nimport { getCategoryResultProduct } from '../../../mock/getCategoryResultProducts';\n\ninterface CategoryProductsProps {\n  params: URLSearchParams;\n}\n\nconst CategoryProducts = ({ params }: CategoryProductsProps) => {\n  /**\n   * queryString을 전달받아 상품의 리스트를 나열하는 컴포넌트입니다.\n   * api로 처리될 상품 리스트를 받는 부분은 임시로 생성하여 사용했습니다.\n   */\n\n  const [productIds, setProductIds] = useState<string[]>([]);\n  const { productQuery } = useProduct();\n\n  useEffect(() => {\n    if (!productQuery.isSuccess) return;\n\n    const newProductIds = getCategoryResultProduct({\n      products: productQuery.data,\n      params,\n    });\n\n    setProductIds(newProductIds);\n  }, [params, productQuery.isSuccess, productQuery.data]);\n\n  const getTitle = useMemo(() => {\n    const medium = params.get(CATEGORY_PARAMS.categoryMedium);\n    if (medium !== '전체') return medium ? medium : '';\n\n    return `${params.get(CATEGORY_PARAMS.group)} 전체 보기`;\n  }, [params]);\n\n  if (!productQuery.isSuccess)\n    return (\n      <S.Loading>\n        <SkeletonLoading />\n      </S.Loading>\n    );\n\n  return (\n    <S.Component>\n      <S.Title>{getTitle}</S.Title>\n\n      <S.ProductList>\n        {productIds.map((productId) => (\n          <S.Product key={productId}>\n            <ListProductBasic productId={productId} />\n          </S.Product>\n        ))}\n      </S.ProductList>\n    </S.Component>\n  );\n};\n\nexport default CategoryProducts;\n","import { CATEGORY_PARAMS } from '../constants/path';\nimport { FormatedProductProps, Products } from '../types/product';\n\ninterface GetCategoryResultProductProps {\n  products: Products;\n  params: URLSearchParams;\n}\n\nconst filterGroup = (value: string, productList: FormatedProductProps[]) => {\n  let filteredProducts: FormatedProductProps[] = productList;\n  switch (value) {\n    case '의류':\n      filteredProducts = productList.filter(\n        ({ categoryMedium }) =>\n          categoryMedium === '아우터' || categoryMedium === '상의' || categoryMedium === '하의'\n      );\n      break;\n    case '컴퓨터/디지털':\n      filteredProducts = productList.filter(\n        ({ categoryMedium }) => categoryMedium === '컴퓨터/디지털'\n      );\n  }\n\n  return filteredProducts;\n};\n\nconst filterCategoryLarge = (value: string, productList: FormatedProductProps[]) => {\n  let filteredProducts: FormatedProductProps[] = productList;\n\n  switch (value) {\n    case 'man':\n      filteredProducts = productList.filter(({ categoryLarge }) => categoryLarge === 'man');\n      break;\n    case 'woman':\n      filteredProducts = productList.filter(({ categoryLarge }) => categoryLarge === 'woman');\n  }\n\n  return filteredProducts;\n};\n\nconst filterCategoryMedium = (value: string, productList: FormatedProductProps[]) => {\n  let filteredProducts: FormatedProductProps[] = productList;\n\n  switch (value) {\n    case '아우터':\n      filteredProducts = productList.filter(({ categoryMedium }) => categoryMedium === '아우터');\n      break;\n    case '상의':\n      filteredProducts = productList.filter(({ categoryMedium }) => categoryMedium === '상의');\n      break;\n    case '하의':\n      filteredProducts = productList.filter(({ categoryMedium }) => categoryMedium === '하의');\n  }\n\n  return filteredProducts;\n};\n\nexport const getCategoryResultProduct = ({ products, params }: GetCategoryResultProductProps) => {\n  /**\n   * 카테고리 상품 조회 API를 임시로 만든 함수입니다.\n   */\n\n  let formatedProducts: FormatedProductProps[] = Object.keys(products).map((key) => ({\n    productId: key,\n    ...products[key],\n  }));\n\n  params.forEach((value, key) => {\n    switch (key) {\n      case CATEGORY_PARAMS.group:\n        formatedProducts = filterGroup(value, formatedProducts);\n        break;\n      case CATEGORY_PARAMS.categoryLarge:\n        formatedProducts = filterCategoryLarge(value, formatedProducts);\n        break;\n      case CATEGORY_PARAMS.categoryMedium:\n        formatedProducts = filterCategoryMedium(value, formatedProducts);\n        break;\n    }\n  });\n\n  return formatedProducts.map(({ productId }) => productId);\n};\n","import { useEffect, useState } from 'react';\nimport CommonPageAnimation from '../../components/common/motion/CommonPageAnimation/CommonPageAnimation';\nimport { PageStyle as S } from './CategoryDetailPage.styled';\nimport CategoryProducts from '../../components/category/CategoryProducts/CategoryProducts';\nimport NotFoundComponent from '../../components/common/NotFoundComponent/NotFoundComponent';\n\nconst CategoryPage = () => {\n  const [params, setParams] = useState<URLSearchParams | null>(null);\n\n  useEffect(() => {\n    const url = window.location.href;\n    const params = new URLSearchParams(url.split('?')[1]);\n    setParams(params);\n  }, []);\n\n  if (params === null)\n    return (\n      <CommonPageAnimation>\n        <NotFoundComponent />\n      </CommonPageAnimation>\n    );\n\n  return (\n    <CommonPageAnimation>\n      <S.Page>\n        <CategoryProducts params={params} />\n      </S.Page>\n    </CommonPageAnimation>\n  );\n};\n\nexport default CategoryPage;\n"],"names":["SkeletonLoading","_jsxs","style","display","width","autoPlay","muted","loop","playsInline","poster","children","_jsx","src","type","PageStyle","Page","styled","section","_templateObject","_taggedTemplateLiteral","ComponentStyle","Component","div","theme","padding","BODY_WITH_BOTTOM_MARGIN","Loading","_templateObject2","Title","h1","_templateObject3","color","BLACK","ProductList","ul","_templateObject4","Product","li","_templateObject5","_ref","params","productIds","setProductIds","useState","productQuery","useProduct","useEffect","isSuccess","newProductIds","_ref8","products","formatedProducts","Object","keys","map","key","productId","forEach","value","CATEGORY_PARAMS","group","filterGroup","productList","filteredProducts","filter","categoryMedium","_ref2","categoryLarge","filterCategoryLarge","_ref3","_ref4","filterCategoryMedium","_ref5","_ref6","_ref7","_ref9","getCategoryResultProduct","data","getTitle","useMemo","medium","get","concat","S","ListProductBasic","CategoryPage","setParams","url","window","location","href","URLSearchParams","split","CommonPageAnimation","NotFoundComponent","CategoryProducts"],"sourceRoot":""}