{"version":3,"file":"static/js/436.844b1a51.chunk.js","mappings":"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","sources":["components/showcase/ShowcaseSwiper/ShowcaseSwiper.styled.ts","components/showcase/ShowcaseSwiper/ShowcaseSwiper.tsx","components/skeleton/common/SkeletonLoading.tsx","hooks/showcase/useShowcase.ts","api/firebase/database/showcase.ts","api/firebase/database/brand.ts","hooks/brand/useBrand.ts","pages/BrandDetailPage/BrandDetailPage.styled.ts","components/brand/BrandProductList/BrandProductList.styled.ts","components/brand/BrandProductList/BrandProductList.tsx","pages/BrandDetailPage/BrandDetailPage.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from '../../../styles/theme';\n\nconst Component = styled.div`\n  & .swiper,\n  & .swiper img {\n    width: 100%;\n    display: block;\n  }\n\n  & .swiper .swiper-slide {\n    overflow: hidden;\n  }\n\n  & .swiper .swiper-pagination {\n    position: absolute;\n    bottom: 0;\n    left: auto;\n    top: auto;\n    right: 0;\n    width: 100%;\n    display: flex;\n    padding: 1rem;\n    justify-content: flex-end;\n    align-items: center;\n  }\n\n  & .swiper .swiper-pagination .swiper-pagination-bullet {\n    width: 6px;\n    height: 6px;\n    position: relative;\n    background: ${theme.color.WHITE};\n    border-radius: 50%;\n    margin-right: 3px;\n    opacity: 0.3;\n  }\n\n  & .swiper .swiper-pagination .swiper-pagination-bullet:last-child {\n    margin-right: 0;\n  }\n\n  & .swiper .swiper-pagination .swiper-pagination-bullet-active {\n    opacity: 1;\n  }\n`;\n\nconst ShowcaseWrap = styled.div`\n  width: 100%;\n`;\n\nconst ShowcaseWrapSingle = styled.div`\n  width: 100%;\n`;\n\nconst Showcase = styled.div`\n  position: relative;\n  cursor: pointer;\n`;\n\nconst Img = styled.img`\n  width: 100%;\n  display: block;\n  position: relative;\n`;\n\nconst Shadow = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(to bottom, transparent, rgba(0, 0, 0, 0.5));\n`;\n\nconst Title = styled.h1`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  padding: 1rem;\n  text-align: left;\n  width: 70%;\n  color: ${theme.color.WHITE};\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 1.2;\n`;\n\nexport const ComponentStyle = {\n  Component,\n  ShowcaseWrap,\n  ShowcaseWrapSingle,\n  Showcase,\n  Img,\n  Shadow,\n  Title,\n};\n","import { useCallback } from 'react';\nimport { useShowcase } from '../../../hooks/showcase/useShowcase';\nimport { ComponentStyle as S } from './ShowcaseSwiper.styled';\nimport { Autoplay, Pagination, Virtual } from 'swiper/modules';\nimport { Swiper as SwiperContainer, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper-bundle.css';\nimport { useRouter } from '../../../hooks/useRouter';\nimport { ROUTE_PATH } from '../../../constants/path';\nimport { motion } from 'framer-motion';\nimport { motionStyle } from '../../../styles/motion';\n\ninterface ShowcaseSwiperProps {\n  showcaseIds: number[];\n}\n\nconst ShowcaseSwiper = ({ showcaseIds }: ShowcaseSwiperProps) => {\n  const { showcaseQuery, currentShowcase } = useShowcase({ showcaseIds });\n  const { navigate } = useRouter();\n\n  const handleClickShowcase = useCallback(\n    (id: number) => {\n      navigate(ROUTE_PATH.showcaseDetail.replace(':id', `${id}`));\n    },\n    [navigate]\n  );\n\n  if (currentShowcase.length === 0 || showcaseQuery.isPending) return <></>;\n\n  if (currentShowcase.length === 1)\n    return (\n      <S.ShowcaseWrapSingle>\n        <motion.div\n          whileTap={motionStyle.scaleButton.whileTap}\n          transition={motionStyle.scaleButton.transition}\n          onClick={() => {\n            handleClickShowcase(currentShowcase[0].id);\n          }}\n        >\n          <S.Showcase>\n            <S.Img src={`${currentShowcase[0].thumb}`} alt={currentShowcase[0].title} />\n            <S.Shadow />\n            <S.Title>{currentShowcase[0].title}</S.Title>\n          </S.Showcase>\n        </motion.div>\n      </S.ShowcaseWrapSingle>\n    );\n\n  return (\n    <S.Component>\n      <SwiperContainer\n        initialSlide={0}\n        slidesPerView={1}\n        virtual\n        autoplay={{ delay: 3000 }}\n        modules={[Pagination, Virtual, Autoplay]}\n        pagination={{\n          clickable: true,\n        }}\n        className=\"swiper\"\n      >\n        {currentShowcase.map(({ id, thumb, title }) => (\n          <SwiperSlide key={id} virtualIndex={id}>\n            <S.ShowcaseWrap>\n              <motion.div\n                whileTap={motionStyle.scaleButton.whileTap}\n                transition={motionStyle.scaleButton.transition}\n                onClick={() => {\n                  handleClickShowcase(id);\n                }}\n              >\n                <S.Showcase>\n                  <S.Img src={`${thumb}`} alt={title} />\n                  <S.Shadow />\n                  <S.Title>{title}</S.Title>\n                </S.Showcase>\n              </motion.div>\n            </S.ShowcaseWrap>\n          </SwiperSlide>\n        ))}\n      </SwiperContainer>\n    </S.Component>\n  );\n};\n\nexport default ShowcaseSwiper;\n","const SkeletonLoading = () => {\n  return (\n    <video\n      style={{ display: 'block', width: '100%' }}\n      autoPlay\n      muted\n      loop\n      playsInline\n      poster=\"../img/system/loading.png\"\n    >\n      <source src=\"../img/system/loading.webm\" type=\"video/webm\" />\n      <source src=\"../img/system/loading.mp4\" type=\"video/mp4\" />\n    </video>\n  );\n};\n\nexport default SkeletonLoading;\n","import { useQuery } from '@tanstack/react-query';\nimport { queryAPI } from '../../constants/query';\nimport { ShowcaseProps } from '../../types/showcase';\nimport { getShowcaseData } from '../../api/firebase/database/showcase';\nimport { useEffect, useState } from 'react';\n\nexport const useShowcase = ({ showcaseIds = [] }: { showcaseIds?: number[] }) => {\n  /**\n   * firebase realtimeDB에서 쇼케이스 정보를 가져옵니다.\n   */\n\n  const [currentShowcase, setCurrentShowcase] = useState<ShowcaseProps[]>([]);\n\n  const queryKey = [queryAPI.queryKey.showcase];\n\n  const showcaseQuery = useQuery<ShowcaseProps[] | null>({\n    queryKey,\n    queryFn: async () => {\n      const result = await getShowcaseData();\n      if (Array.isArray(result)) return result;\n      return null;\n    },\n    staleTime: queryAPI.staleTime.SHOWCASE,\n  });\n\n  useEffect(() => {\n    if (showcaseQuery.data === undefined || showcaseQuery.data === null) return;\n    const filteredShowcase = showcaseQuery.data.filter(({ id }) => showcaseIds.includes(id));\n    setCurrentShowcase(filteredShowcase);\n  }, [showcaseQuery.data, showcaseIds]);\n\n  return { showcaseQuery, currentShowcase };\n};\n","/**\n * firebase realtimeDB에서 쇼케이스 정보를 가져옵니다.\n */\n\nimport { get, ref } from 'firebase/database';\nimport { firebaseDB } from '../firebase';\nimport { queryAPI } from '../../../constants/query';\nimport { ShowcaseProps } from '../../../types/showcase';\n\nexport const getShowcaseData = async () => {\n  const showcase = await get(ref(firebaseDB, `${queryAPI.queryKey.showcase}`))\n    .then((snapshot) => {\n      const data: ShowcaseProps[] | null = snapshot.val() || null;\n      return data;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  return showcase;\n};\n","/**\n * firebase realtimeDB에서 브랜드 정보를 가져옵니다.\n */\n\nimport { get, ref } from 'firebase/database';\nimport { firebaseDB } from '../firebase';\nimport { queryAPI } from '../../../constants/query';\n\nexport const getBrandData = async () => {\n  const brandData = await get(ref(firebaseDB, `${queryAPI.queryKey.brands}`))\n    .then((snapshot) => {\n      const data = snapshot.val() || null;\n      return data;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  return brandData;\n};\n","import { useQuery } from '@tanstack/react-query';\nimport { FetchBrandProps } from '../../types/brand';\nimport { queryAPI } from '../../constants/query';\nimport { getBrandData } from '../../api/firebase/database/brand';\n\nexport const useBrand = () => {\n  /**\n   * firebase realtimeDB에서 브랜드 정보를 가져옵니다.\n   */\n\n  const queryKey = [queryAPI.queryKey.brands];\n\n  const brandQuery = useQuery<FetchBrandProps[]>({\n    queryKey,\n    queryFn: async () => {\n      const result = await getBrandData();\n      return result;\n    },\n    staleTime: queryAPI.staleTime.BRAND,\n  });\n\n  return { brandQuery };\n};\n","import styled from 'styled-components';\nimport { theme } from '../../styles/theme';\n\nconst Page = styled.section`\n  padding-bottom: 150px;\n`;\n\nconst Loading = styled.div`\n  margin: 6rem auto;\n  width: 60px;\n`;\n\nconst NoBrandResult = styled.h1`\n  font-size: 16px;\n  font-weight: 500;\n  color: ${theme.color.BLACK};\n  text-align: center;\n  padding: 18rem ${theme.padding.DEFAULT};\n  width: 100%;\n`;\n\nconst BackHome = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  color: ${theme.color.GRAY7};\n  text-decoration: underline;\n  padding-top: 1rem;\n`;\n\nconst Main = styled.div`\n  padding: 4.8rem 3.2rem;\n  background-size: cover;\n  background-position: top center;\n  min-height: 30rem;\n  position: relative;\n`;\n\nconst Shadow = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n  background: ${theme.color.BLACK};\n  opacity: 0.3;\n`;\n\nconst NameEn = styled.h2`\n  color: ${theme.color.WHITE};\n  font-size: 16px;\n  font-weight: 600;\n  position: relative;\n  z-index: 1;\n`;\n\nconst NameKo = styled.h1`\n  color: ${theme.color.WHITE};\n  font-size: 32px;\n  font-weight: 700;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Intro = styled.p`\n  color: ${theme.color.WHITE};\n  font-size: 14px;\n  font-weight: 400;\n  padding-top: 1.4rem;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Showcase = styled.div`\n  padding: 0 ${theme.padding.DEFAULT};\n`;\n\nconst Title = styled.h2`\n  color: ${theme.color.BLACK};\n  font-size: 18px;\n  font-weight: 700;\n  padding: 4rem ${theme.padding.DEFAULT} 0;\n`;\n\nexport const PageStyle = {\n  Page,\n  Loading,\n  NoBrandResult,\n  BackHome,\n  Main,\n  Shadow,\n  NameEn,\n  NameKo,\n  Intro,\n  Showcase,\n  Title,\n};\n","import styled from 'styled-components';\nimport { theme } from '../../../styles/theme';\n\nconst Component = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  width: 100%;\n  flex-wrap: wrap;\n  padding: ${theme.padding.BODY};\n`;\n\nconst Product = styled.div`\n  width: calc(50% - 5px);\n`;\n\nexport const ComponentStyle = {\n  Component,\n  Product,\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { useProduct } from '../../../hooks/product/useProduct';\nimport { ComponentStyle as S } from './BrandProductList.styled';\nimport { Products } from '../../../types/product';\nimport ListProductBasic from '../../product/ListProductBasic/ListProductBasic';\n\ninterface BrandProductListProps {\n  brandId: number | null;\n}\n\nconst BrandProductList = ({ brandId }: BrandProductListProps) => {\n  /**\n   * 브랜드 상세 페이지의 상품 리스트 컴포넌트입니다.\n   */\n\n  const { productQuery } = useProduct();\n  const [products, setProducts] = useState<string[]>([]);\n\n  const getBrandProductsId = useCallback(\n    (products: Products) => {\n      const productIds = Object.keys(products).filter(\n        (productId) => products[productId].brandId === brandId\n      );\n      return productIds;\n    },\n    [brandId]\n  );\n\n  useEffect(() => {\n    if (productQuery.data === undefined) return;\n    setProducts(getBrandProductsId(productQuery.data));\n  }, [brandId, productQuery.data, getBrandProductsId]);\n\n  if (products.length === 0) return <></>;\n  return (\n    <S.Component>\n      {products.map((productId) => (\n        <S.Product key={productId}>\n          <ListProductBasic productId={productId} />\n        </S.Product>\n      ))}\n    </S.Component>\n  );\n};\n\nexport default BrandProductList;\n","import CommonPageAnimation from '../../components/common/motion/CommonPageAnimation/CommonPageAnimation';\nimport { useBrand } from '../../hooks/brand/useBrand';\nimport { PageStyle as S } from './BrandDetailPage.styled';\nimport { useParams } from 'react-router-dom';\nimport SkeletonLoading from '../../components/skeleton/common/SkeletonLoading';\nimport { useEffect, useState } from 'react';\nimport { FetchBrandProps } from '../../types/brand';\nimport ShowcaseSwiper from '../../components/showcase/ShowcaseSwiper/ShowcaseSwiper';\nimport BrandProductList from '../../components/brand/BrandProductList/BrandProductList';\nimport NotFoundComponent from '../../components/common/NotFoundComponent/NotFoundComponent';\n\nconst BrandDetailPage = () => {\n  const { id } = useParams();\n  const { brandQuery } = useBrand();\n\n  const [brand, setBrand] = useState<FetchBrandProps | null>(null);\n\n  useEffect(() => {\n    if (!brandQuery.isSuccess || brandQuery.data === null) return;\n    const currentBrand = brandQuery.data.find(({ id: brandId }) => `${brandId}` === id);\n    if (currentBrand !== undefined) {\n      setBrand(currentBrand);\n    }\n  }, [brandQuery.data, id, brandQuery.isSuccess]);\n\n  if (!brandQuery.isSuccess)\n    return (\n      <S.Page>\n        <S.Loading>\n          <SkeletonLoading />\n        </S.Loading>\n      </S.Page>\n    );\n\n  if (brand === null || id === undefined) return <NotFoundComponent />;\n  return (\n    <CommonPageAnimation>\n      <S.Page>\n        <S.Main style={{ backgroundImage: `url(${brand.mainImg})` }}>\n          <S.Shadow />\n          <S.NameEn>{brand.nameEn}</S.NameEn>\n          <S.NameKo>{brand.nameKo}</S.NameKo>\n          <S.Intro>{brand.introduce}</S.Intro>\n        </S.Main>\n\n        <S.Title style={{ paddingBottom: '2rem' }}>쇼케이스</S.Title>\n        <S.Showcase>\n          <ShowcaseSwiper showcaseIds={brand.showcase} />\n        </S.Showcase>\n\n        <S.Title>상품</S.Title>\n        <BrandProductList brandId={isNaN(+id) ? null : +id} />\n      </S.Page>\n    </CommonPageAnimation>\n  );\n};\n\nexport default BrandDetailPage;\n"],"names":["ComponentStyle","Component","styled","div","_templateObject","_taggedTemplateLiteral","theme","color","WHITE","ShowcaseWrap","_templateObject2","ShowcaseWrapSingle","_templateObject3","Showcase","_templateObject4","Img","img","_templateObject5","Shadow","_templateObject6","Title","h1","_templateObject7","_ref","showcaseIds","showcaseQuery","currentShowcase","useShowcase","navigate","useRouter","handleClickShowcase","useCallback","id","ROUTE_PATH","showcaseDetail","replace","concat","length","isPending","_jsx","_Fragment","S","children","motion","whileTap","motionStyle","scaleButton","transition","onClick","_jsxs","src","thumb","alt","title","SwiperContainer","initialSlide","slidesPerView","virtual","autoplay","delay","modules","Pagination","Virtual","Autoplay","pagination","clickable","className","map","_ref2","SwiperSlide","virtualIndex","SkeletonLoading","style","display","width","autoPlay","muted","loop","playsInline","poster","type","setCurrentShowcase","useState","queryKey","queryAPI","showcase","useQuery","queryFn","async","result","get","ref","firebaseDB","then","snapshot","val","catch","error","console","log","getShowcaseData","Array","isArray","staleTime","SHOWCASE","useEffect","undefined","data","filteredShowcase","filter","includes","useBrand","brands","brandQuery","getBrandData","BRAND","PageStyle","Page","section","Loading","NoBrandResult","BLACK","padding","DEFAULT","BackHome","p","GRAY7","Main","NameEn","h2","NameKo","_templateObject8","Intro","_templateObject9","_templateObject10","_templateObject11","BODY","Product","brandId","productQuery","useProduct","products","setProducts","getBrandProductsId","Object","keys","productId","ListProductBasic","BrandDetailPage","useParams","brand","setBrand","isSuccess","currentBrand","find","NotFoundComponent","CommonPageAnimation","backgroundImage","mainImg","nameEn","nameKo","introduce","paddingBottom","ShowcaseSwiper","BrandProductList","isNaN"],"sourceRoot":""}