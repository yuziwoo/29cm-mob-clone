{"version":3,"file":"static/js/44.dc8ae104.chunk.js","mappings":"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","sources":["components/icons/IconEye.tsx","components/icons/IconEyeSlash.tsx","components/common/TextInput/TextInput.styled.ts","components/common/TextInput/TextInput.tsx","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","components/common/motion/CommonPageAnimation/CommonPageAnimation.tsx","utils/validateEmail.ts"],"sourcesContent":["import { theme } from '../../styles/theme';\n\ninterface IconEyeProps {\n  color?: string;\n}\n\nconst IconEye = ({ color = theme.color.BLACK }: IconEyeProps) => {\n  return (\n    <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M2.5 13.9997C6 8.16632 15.5 -0.000344753 25.5 13.9997C22 19.4995 12.5 27.1994 2.5 13.9997Z\"\n        stroke={color}\n        strokeWidth=\"2\"\n        strokeLinejoin=\"round\"\n      />\n      <circle cx=\"14\" cy=\"14\" r=\"4\" stroke={color} strokeWidth=\"2\" />\n    </svg>\n  );\n};\n\nexport default IconEye;\n","import { theme } from '../../styles/theme';\n\ninterface IconEyeSlashProps {\n  color?: string;\n}\n\nconst IconEyeSlash = ({ color = theme.color.BLACK }: IconEyeSlashProps) => {\n  return (\n    <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M27.7379 23.4061L1.57543 2.95337C1.50367 2.89591 1.4213 2.85316 1.33301 2.82754C1.24473 2.80192 1.15226 2.79394 1.0609 2.80406C0.96953 2.81417 0.88105 2.84218 0.800509 2.8865C0.719968 2.93081 0.648943 2.99055 0.59149 3.0623L0.15399 3.60874C0.0964019 3.68053 0.0535337 3.76296 0.0278386 3.85133C0.00214337 3.9397 -0.00587447 4.03227 0.00424382 4.12374C0.0143621 4.21521 0.0424179 4.30379 0.0868059 4.3844C0.131194 4.46502 0.191043 4.53609 0.262928 4.59355L26.4254 25.0462C26.4972 25.1037 26.5796 25.1465 26.6678 25.1721C26.7561 25.1977 26.8486 25.2057 26.94 25.1956C27.0313 25.1854 27.1198 25.1574 27.2003 25.1131C27.2809 25.0688 27.3519 25.0091 27.4094 24.9373L27.8469 24.3909C27.9045 24.3191 27.9473 24.2367 27.973 24.1483C27.9987 24.0599 28.0067 23.9673 27.9966 23.8759C27.9865 23.7844 27.9584 23.6958 27.9141 23.6152C27.8697 23.5346 27.8098 23.4635 27.7379 23.4061ZM12.985 9.20787L18.8821 13.8182C18.7849 11.1959 16.6464 9.0998 14.0004 9.0998C13.6591 9.10044 13.3188 9.13666 12.985 9.20787ZM15.0159 18.7922L9.1188 14.1818C9.21637 16.8037 11.3549 18.8998 14.0004 18.8998C14.3417 18.8991 14.682 18.863 15.0159 18.7922ZM14.0004 7.69981C18.3164 7.69981 22.2731 10.1061 24.4099 13.9998C23.8861 14.9581 23.2389 15.8436 22.4849 16.6336L24.136 17.9242C25.0553 16.9408 25.8341 15.8349 26.4504 14.6381C26.5504 14.4401 26.6026 14.2214 26.6026 13.9996C26.6026 13.7778 26.5504 13.559 26.4504 13.3611C24.0756 8.73187 19.3786 5.59981 14.0004 5.59981C12.3948 5.59981 10.8631 5.90606 9.42286 6.42274L11.4533 8.01043C12.2819 7.82231 13.1307 7.69981 14.0004 7.69981ZM14.0004 20.2998C9.68449 20.2998 5.72818 17.8936 3.59099 13.9998C4.11546 13.0415 4.76338 12.1562 5.51818 11.3665L3.86705 10.0759C2.94793 11.0591 2.16924 12.1648 1.55312 13.3615C1.45303 13.5595 1.40089 13.7782 1.40089 14C1.40089 14.2219 1.45303 14.4406 1.55312 14.6386C3.92568 19.2677 8.62268 22.3998 14.0004 22.3998C15.6061 22.3998 17.1377 22.0914 18.578 21.5769L16.5476 19.9896C15.7189 20.1773 14.8706 20.2998 14.0004 20.2998Z\"\n        fill={color}\n      />\n    </svg>\n  );\n};\n\nexport default IconEyeSlash;\n","import styled from 'styled-components';\nimport { theme } from '../../../styles/theme';\n\nconst getInputColor = (isValid: boolean | null) => {\n  switch (isValid) {\n    case true:\n      return theme.color.INPUT_VALID;\n    case false:\n      return theme.color.INPUT_INVALID;\n    default:\n      return theme.color.INPUT_GRAY;\n  }\n};\n\nconst Component = styled.div`\n  width: 100%;\n  position: relative;\n  background: ${theme.color.WHITE};\n  transition: padding 0.2s;\n`;\n\nconst Label = styled.label<{ $isValid: boolean | null; $smallLabel: boolean }>`\n  font-size: 16px;\n  font-weight: 500;\n  background: ${theme.color.WHITE};\n  padding: 0 10px;\n  position: absolute;\n  left: 10px;\n  top: 21px;\n  transition: transform 0.3s, opacity 0.3s;\n  transform-origin: top left;\n  z-index: 1;\n  transform: ${({ $smallLabel }) =>\n    $smallLabel ? 'translateY(-29px) scale(0.7)' : 'translateY(0) scale(1)'};\n  color: ${({ $isValid }) => getInputColor($isValid)};\n`;\n\nconst Input = styled.input<{ $isValid: boolean | null }>`\n  position: relative;\n  width: 100%;\n  padding: 20px;\n  font-size: 16px;\n  font-weight: 500;\n  border-radius: 10px;\n  transition: border 0.3s;\n  color: ${theme.color.BLACK};\n  border: 1px solid ${({ $isValid }) => getInputColor($isValid)};\n`;\n\nconst Message = styled.p`\n  position: absolute;\n  left: 20px;\n  top: 68px;\n  font-size: 12px;\n  color: ${theme.color.INPUT_INVALID};\n`;\n\nconst PasswordSecurity = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n\n  & svg {\n    width: 70%;\n    height: 70%;\n  }\n`;\n\nexport const ComponentStyle = {\n  Component,\n  Label,\n  Input,\n  Message,\n  PasswordSecurity,\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { theme } from '../../../styles/theme';\nimport IconEye from '../../icons/IconEye';\nimport IconEyeSlash from '../../icons/IconEyeSlash';\nimport { ComponentStyle as S } from './TextInput.styled';\n\ninterface TextInputProps {\n  type: 'email' | 'text' | 'password';\n  id: string;\n  placeholder: string;\n  isValid: boolean | null;\n  maxLength?: number;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  onChange?: (input: string) => void;\n  required?: boolean;\n  fixedPaddingBottom?: string;\n  invalidMessage?: string;\n}\n\nconst TextInput = (props: TextInputProps) => {\n  /**\n   * Textinput 사용 방법\n   * - isValid 파라미터를 이용하여 유효한 값인지 여부를 전달해주세요.\n   * - onChange 파라미터를 통해 input value를 전달 받을 수 있습니다.\n   * - type을 'password'로 설정한 경우 PasswordSecurity 버튼이 활성화됩니다. (텍스트 *표시 여부)\n   * - fixedPaddingBottom을 설정하지 않으면 valid한 경우 20px, Invalid한 경우 40px의 padding-bottom이 주어집니다.\n   */\n  \n  const {\n    type,\n    id,\n    placeholder,\n    isValid,\n    maxLength = 50,\n    onFocus = () => {},\n    onBlur = () => {},\n    onChange = (input) => {},\n    required = false,\n    fixedPaddingBottom,\n    invalidMessage = '잘못된 입력입니다.',\n  } = props;\n\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const [text, setText] = useState('');\n  const [smallLabel, setSmallLabel] = useState(false);\n  const [paddingBottom, setPaddingBottom] = useState(\n    fixedPaddingBottom ? fixedPaddingBottom : '20px'\n  );\n\n  useEffect(() => {\n    setPaddingBottom(fixedPaddingBottom ? fixedPaddingBottom : isValid === false ? '40px' : '20px');\n    // eslint-disable-next-line\n  }, [isValid, fixedPaddingBottom]);\n\n  const handleChangeInput = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setText(e.target.value);\n      onChange(e.target.value);\n    },\n    [onChange]\n  );\n\n  const handleFocusInput = useCallback(() => {\n    setSmallLabel(true);\n    onFocus();\n  }, [onFocus]);\n\n  const handleBlurInput = useCallback(() => {\n    if (text.length === 0) {\n      setSmallLabel(false);\n    }\n    onBlur();\n    // eslint-disable-next-line\n  }, [onBlur]);\n\n  const handleClickPasswordSecurity = useCallback(() => {\n    setIsPasswordVisible((prev) => !prev);\n  }, []);\n\n  return (\n    <S.Component style={{ paddingBottom: paddingBottom }}>\n      <S.Label htmlFor={id} $isValid={isValid} $smallLabel={smallLabel}>\n        {placeholder}\n      </S.Label>\n      <S.Input\n        $isValid={isValid}\n        type={type !== 'password' ? type : isPasswordVisible ? 'text' : 'password'}\n        id={id}\n        name={id}\n        maxLength={maxLength}\n        onChange={handleChangeInput}\n        onFocus={handleFocusInput}\n        onBlur={handleBlurInput}\n        required={required}\n      />\n      {isValid === false && <S.Message>{invalidMessage}</S.Message>}\n\n      {type === 'password' && (\n        <S.PasswordSecurity onClick={handleClickPasswordSecurity}>\n          {isPasswordVisible ? (\n            <IconEye color={theme.color.BLACK} />\n          ) : (\n            <IconEyeSlash color={theme.color.BLACK} />\n          )}\n        </S.PasswordSecurity>\n      )}\n    </S.Component>\n  );\n};\n\nexport default TextInput;\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { AnimatePresence, motion } from 'framer-motion';\nimport { motionStyle } from '../../../../styles/motion';\n\ninterface CommonPageAnimationProps {\n  children: React.ReactNode;\n}\n\nconst CommonPageAnimation = ({ children }: CommonPageAnimationProps) => {\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={motionStyle.pageOpen.initial}\n        animate={motionStyle.pageOpen.animate}\n        transition={motionStyle.pageOpen.transition}\n        exit={motionStyle.pageOpen.exit}\n        style={{ position: 'relative', width: '100%' }}\n      >\n        {children}\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nexport default CommonPageAnimation;\n","const emailRegex =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  \nexport const validateEmail = (email: string) => emailRegex.test(email);\n"],"names":["_ref","color","theme","BLACK","_jsxs","width","height","viewBox","fill","xmlns","children","_jsx","d","stroke","strokeWidth","strokeLinejoin","cx","cy","r","getInputColor","isValid","INPUT_VALID","INPUT_INVALID","INPUT_GRAY","ComponentStyle","Component","styled","div","_templateObject","_taggedTemplateLiteral","WHITE","Label","label","_templateObject2","$smallLabel","_ref2","$isValid","Input","input","_templateObject3","_ref3","Message","p","_templateObject4","PasswordSecurity","_templateObject5","props","type","id","placeholder","maxLength","onFocus","onBlur","onChange","required","fixedPaddingBottom","invalidMessage","isPasswordVisible","setIsPasswordVisible","useState","text","setText","smallLabel","setSmallLabel","paddingBottom","setPaddingBottom","useEffect","handleChangeInput","useCallback","e","target","value","handleFocusInput","handleBlurInput","length","handleClickPasswordSecurity","prev","S","style","htmlFor","name","onClick","IconEye","IconEyeSlash","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","childRef","isPresent","size","sizeRef","offsetHeight","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","PopChild","useId","ref","useInsertionEffect","dataset","motionPopId","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","forceRender","useContext","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","map","presentKeys","targetKeys","numPresent","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement","motion","motionStyle","pageOpen","animate","transition","exit","position","emailRegex","validateEmail","email","test"],"sourceRoot":""}