{"version":3,"file":"static/js/132.8fe20de1.chunk.js","mappings":"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","sources":["pages/LoginPage/LoginPage.styled.ts","components/login/LoginForm/LoginForm.styled.ts","components/login/LoginForm/LoginForm.tsx","components/login/SocialLogin/SocialLogin.styled.ts","components/icons/IconGoogle.tsx","mock/testEmail.ts","components/login/SocialLogin/SocialLogin.tsx","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from '../../styles/theme';\n\nconst Page = styled.section`\n  padding: ${theme.padding.BODY_WITH_BOTTOM_MARGIN};\n`;\n\nconst Logo = styled.div`\n  width: 182.5px;\n  height: 45px;\n  margin-top: 20px;\n  display: inline-block;\n  cursor: pointer;\n\n  & svg {\n    width: 100%;\n    height: 100%;\n    display: block;\n  }\n`;\n\nconst Title = styled.div`\n  position: relative;\n  padding: 30px 0;\n\n  &::before {\n    content: '';\n    width: 100%;\n    height: 1px;\n    background: ${theme.color.BLACK};\n    opacity: 0.1;\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n\n  & h1 {\n    font-size: 16px;\n    font-weight: 500;\n    position: relative;\n    display: inline-block;\n    padding-right: 20px;\n    background: ${theme.color.WHITE};\n    color: ${theme.color.BLACK};\n  }\n`;\n\nconst CreateAccount = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 30px 0 10px;\n\n  & a {\n    text-decoration: underline;\n    font-size: 16px;\n    font-weight: 500;\n    text-align: center;\n    cursor: pointer;\n    color: ${theme.color.BLACK};\n  }\n`;\n\nexport const PageStyle = {\n  Page,\n  Logo,\n  Title,\n  CreateAccount,\n};\n","import styled from 'styled-components';\nimport { theme } from '../../../styles/theme';\n\nconst SubmitButton = styled.button`\n  padding: 20px;\n  background: ${theme.color.BLACK};\n  border-radius: 10px;\n  width: 100%;\n\n  & p {\n    text-align: center;\n    font-size: 16px;\n    font-weight: 700;\n    color: ${theme.color.WHITE};\n  }\n`;\n\nexport const ComponentStyle = {\n  SubmitButton\n};","import { useCallback, useId, useState } from 'react';\nimport { ComponentStyle as S } from './LoginForm.styled';\nimport { validateEmail } from '../../../utils/validateEmail';\nimport { FormData } from '../../../types/login';\nimport { useRouter } from '../../../hooks/useRouter';\nimport { motion } from 'framer-motion';\nimport { motionStyle } from '../../../styles/motion';\nimport TextInput from '../../common/TextInput/TextInput';\nimport { useAuth } from '../../../hooks/auth/useAuth';\n\nconst LoginForm = ({ redirectPath }: { redirectPath: string }) => {\n  /**\n   * 로그인 폼입니다.\n   * id, password의 유효성 검사를 실행한 후 로그인 할 수 있습니다.\n   */\n\n  const { navigate } = useRouter();\n  const { loginEmail } = useAuth();\n  const uniqueId = useId();\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!formData.id.isValid || !formData.password.isValid) {\n      window.alert(\n        !formData.id.isValid ? '이메일 주소를 확인해주세요.' : '패스워드를 확인해주세요.'\n      );\n      return;\n    }\n    await loginEmail.mutate({ email: formData.id.state, password: formData.password.state });\n    if (loginEmail.isSuccess) {\n      navigate(redirectPath);\n    }\n  };\n\n  const [formData, setFormData] = useState<FormData>({\n    id: {\n      state: '',\n      isValid: null,\n    },\n    password: {\n      state: '',\n      isValid: null,\n    },\n  });\n\n  const handleIdInputChange = useCallback((input: string) => {\n    setFormData((prevData) => ({\n      id: { state: input, isValid: validateEmail(input) },\n      password: prevData.password,\n    }));\n  }, []);\n\n  const handlePasswordInputChange = useCallback((input: string) => {\n    setFormData((prevData) => ({\n      id: prevData.id,\n      password: { state: input, isValid: input.length > 0 },\n    }));\n  }, []);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextInput\n        type=\"email\"\n        id={`${uniqueId}-id`}\n        onChange={handleIdInputChange}\n        isValid={formData.id.isValid}\n        placeholder=\"이메일*\"\n        maxLength={50}\n        required={true}\n        invalidMessage=\"잘못된 형식의 이메일 주소입니다.\"\n      />\n      <TextInput\n        type=\"password\"\n        id={`${uniqueId}-password`}\n        isValid={formData.password.isValid}\n        onChange={handlePasswordInputChange}\n        placeholder=\"패스워드*\"\n        maxLength={20}\n        required={true}\n        invalidMessage=\"영문, 숫자, 특수문자를 6자 이상 조합하여주세요.\"\n        fixedPaddingBottom=\"40px\"\n      />\n\n      <motion.div\n        whileTap={motionStyle.scaleButton.whileTap}\n        transition={motionStyle.scaleButton.transition}\n      >\n        <S.SubmitButton>\n          <p>로그인</p>\n        </S.SubmitButton>\n      </motion.div>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import styled from 'styled-components';\nimport { theme } from '../../../styles/theme';\n\nconst Component = styled.article`\n  & button {\n    width: 100%;\n    height: 66px;\n    border-radius: 33px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid ${theme.color.GRAY3};\n    margin-bottom: 10px;\n  }\n\n  & button svg {\n    width: 28px;\n    height: 28px;\n    margin-right: 7px;\n  }\n`;\n\nconst Text = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  color: ${theme.color.BLACK};\n`;\n\nconst Icon = styled.div`\n  width: 28px;\n  height: 28px;\n  margin-right: 7px;\n\n  & svg {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const ComponentStyle = {\n  Component,\n  Text,\n  Icon,\n};\n","const IconGoogle = () => {\n  return (\n    <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M25.4384 11.7148H24.4987V11.6663H13.9987V16.333H20.5921C19.6302 19.0496 17.0454 20.9997 13.9987 20.9997C10.1329 20.9997 6.9987 17.8654 6.9987 13.9997C6.9987 10.1339 10.1329 6.99967 13.9987 6.99967C15.7831 6.99967 17.4065 7.67284 18.6426 8.77242L21.9425 5.47251C19.8589 3.53059 17.0717 2.33301 13.9987 2.33301C7.55578 2.33301 2.33203 7.55676 2.33203 13.9997C2.33203 20.4426 7.55578 25.6663 13.9987 25.6663C20.4416 25.6663 25.6654 20.4426 25.6654 13.9997C25.6654 13.2174 25.5849 12.4538 25.4384 11.7148Z\"\n        fill=\"#FFC107\"\n      />\n      <path\n        d=\"M3.67969 8.56942L7.51277 11.3805C8.54994 8.81267 11.0618 6.99967 14.0012 6.99967C15.7856 6.99967 17.409 7.67284 18.6451 8.77242L21.945 5.47251C19.8614 3.53059 17.0742 2.33301 14.0012 2.33301C9.52002 2.33301 5.63385 4.86292 3.67969 8.56942Z\"\n        fill=\"#FF3D00\"\n      />\n      <path\n        d=\"M13.9995 25.6671C17.013 25.6671 19.7512 24.5138 21.8214 22.6384L18.2106 19.5829C17.0393 20.4702 15.5833 21.0004 13.9995 21.0004C10.965 21.0004 8.38845 19.0655 7.41778 16.3652L3.61328 19.2965C5.54411 23.0747 9.46528 25.6671 13.9995 25.6671Z\"\n        fill=\"#4CAF50\"\n      />\n      <path\n        d=\"M25.4397 11.7154H24.5V11.667H14V16.3337H20.5934C20.1314 17.6386 19.292 18.7638 18.2093 19.5834L18.2111 19.5822L21.8219 22.6377C21.5664 22.8699 25.6667 19.8337 25.6667 14.0003C25.6667 13.2181 25.5862 12.4545 25.4397 11.7154Z\"\n        fill=\"#1976D2\"\n      />\n    </svg>\n  );\n};\n\nexport default IconGoogle;\n","export const testEmail = {\n  email: 'test@yuziwoo.com',\n  password: '12341234',\n};\n","import { ComponentStyle as S } from './SocialLogin.styled';\nimport IconGoogle from '../../icons/IconGoogle';\nimport { testEmail } from '../../../mock/testEmail';\nimport { motion } from 'framer-motion';\nimport { motionStyle } from '../../../styles/motion';\nimport { useRouter } from '../../../hooks/useRouter';\nimport { useAuth } from '../../../hooks/auth/useAuth';\n\nconst SocialLogin = ({ redirectPath }: { redirectPath: string }) => {\n  /**\n   * 소셜 로그인 버튼을 모아둔 컴포넌트입니다.\n   */\n\n  const { navigate } = useRouter();\n  const { loginGoogle, loginEmail } = useAuth();\n  const handleTestAccountLogin = async () => {\n    await loginEmail.mutate(testEmail);\n    if (loginEmail.isSuccess) {\n      navigate(redirectPath);\n    }\n  };\n\n  const handleGoogleLogin = async () => {\n    await loginGoogle.mutate();\n    if (loginGoogle.isSuccess) {\n      navigate(redirectPath);\n    }\n  };\n\n  return (\n    <S.Component>\n      <motion.button\n        whileTap={motionStyle.primaryButton.whileTap}\n        transition={motionStyle.primaryButton.transition}\n        onClick={handleTestAccountLogin}\n      >\n        <S.Text>테스트 계정 로그인</S.Text>\n      </motion.button>\n      <motion.button\n        whileTap={motionStyle.primaryButton.whileTap}\n        transition={motionStyle.primaryButton.transition}\n        onClick={handleGoogleLogin}\n      >\n        <S.Icon>\n          <IconGoogle />\n        </S.Icon>\n        <S.Text>구글 로그인</S.Text>\n      </motion.button>\n    </S.Component>\n  );\n};\n\nexport default SocialLogin;\n","import { PageStyle as S } from './LoginPage.styled';\nimport IconLogo from '../../components/icons/IconLogo';\nimport { theme } from '../../styles/theme';\nimport LoginForm from '../../components/login/LoginForm/LoginForm';\nimport SocialLogin from '../../components/login/SocialLogin/SocialLogin';\nimport { useLocation } from 'react-router-dom';\nimport { ROUTE_PATH } from '../../constants/path';\nimport { useEffect, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { userState } from '../../recoil/auth';\nimport { useRouter } from '../../hooks/useRouter';\nimport CommonPageAnimation from '../../components/common/motion/CommonPageAnimation/CommonPageAnimation';\n\nconst LoginPage = () => {\n  // login 유저 redirect\n  const [user] = useRecoilState(userState);\n  const { navigate } = useRouter();\n\n  // 이전에 방문하려던 페이지 저장\n  const location = useLocation();\n  const [redirectPath, setRedirectPath] = useState(ROUTE_PATH.root);\n\n  useEffect(() => {\n    if (location?.state?.path !== undefined) {\n      setRedirectPath(location?.state?.path);\n    }\n  }, [location?.state]);\n\n  useEffect(() => {\n    if (user) {\n      navigate(redirectPath);\n    }\n    // eslint-disable-next-line\n  }, [user]);\n\n  return (\n    <CommonPageAnimation>\n      <S.Page>\n        <S.Logo\n          onClick={() => {\n            navigate(ROUTE_PATH.root);\n          }}\n        >\n          <IconLogo color={theme.color.BLACK} />\n        </S.Logo>\n\n        <S.Title>\n          <h1>로그인</h1>\n        </S.Title>\n\n        <LoginForm redirectPath={redirectPath} />\n\n        <S.CreateAccount>\n          <a\n            href={ROUTE_PATH.join}\n            onClick={(e) => {\n              e.preventDefault();\n              navigate(ROUTE_PATH.join, { state: { path: redirectPath } });\n            }}\n          >\n            계정 만들기\n          </a>\n        </S.CreateAccount>\n\n        <S.Title>\n          <h1>또는 다음으로 계속하기</h1>\n        </S.Title>\n\n        <SocialLogin redirectPath={redirectPath} />\n      </S.Page>\n    </CommonPageAnimation>\n  );\n};\n\nexport default LoginPage;\n"],"names":["PageStyle","Page","styled","section","_templateObject","_taggedTemplateLiteral","theme","padding","BODY_WITH_BOTTOM_MARGIN","Logo","div","_templateObject2","Title","_templateObject3","color","BLACK","WHITE","CreateAccount","_templateObject4","ComponentStyle","SubmitButton","button","_ref","redirectPath","navigate","useRouter","loginEmail","useAuth","uniqueId","useId","formData","setFormData","useState","id","state","isValid","password","handleIdInputChange","useCallback","input","prevData","validateEmail","handlePasswordInputChange","length","_jsxs","onSubmit","async","e","preventDefault","mutate","email","isSuccess","window","alert","children","_jsx","TextInput","type","concat","onChange","placeholder","maxLength","required","invalidMessage","fixedPaddingBottom","motion","whileTap","motionStyle","scaleButton","transition","S","Component","article","GRAY3","Text","p","Icon","IconGoogle","width","height","viewBox","fill","xmlns","d","testEmail","loginGoogle","primaryButton","onClick","LoginPage","user","useRecoilState","userState","location","useLocation","setRedirectPath","ROUTE_PATH","root","useEffect","_location$state","_location$state2","undefined","path","CommonPageAnimation","IconLogo","LoginForm","href","join","SocialLogin"],"sourceRoot":""}