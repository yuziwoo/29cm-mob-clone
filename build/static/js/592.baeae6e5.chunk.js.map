{"version":3,"file":"static/js/592.baeae6e5.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","components/common/motion/CommonPageAnimation/CommonPageAnimation.tsx","components/skeleton/common/SkeletonLoading.tsx","pages/SearchPage/SearchPage.styled.ts","components/search/RecentSearch/RecentSearch.styled.ts","components/search/RecentSearch/RecentSearch.tsx","components/search/SearchWordRanking/SearchWordRanking.styled.ts","utils/getTwoDigitString.ts","components/search/SearchWordRanking/SearchWordRanking.tsx","pages/SearchPage/SearchPage.tsx"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { AnimatePresence, motion } from 'framer-motion';\nimport { motionStyle } from '../../../../styles/motion';\n\ninterface CommonPageAnimationProps {\n  children: React.ReactNode;\n}\n\nconst CommonPageAnimation = ({ children }: CommonPageAnimationProps) => {\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={motionStyle.pageOpen.initial}\n        animate={motionStyle.pageOpen.animate}\n        transition={motionStyle.pageOpen.transition}\n        exit={motionStyle.pageOpen.exit}\n        style={{ position: 'relative', width: '100%' }}\n      >\n        {children}\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nexport default CommonPageAnimation;\n","const SkeletonLoading = () => {\n  return (\n    <video\n      style={{ display: 'block', width: '100%' }}\n      autoPlay\n      muted\n      loop\n      playsInline\n      poster=\"../img/system/loading.png\"\n    >\n      <source src=\"../img/system/loading.webm\" type=\"video/webm\" />\n      <source src=\"../img/system/loading.mp4\" type=\"video/mp4\" />\n    </video>\n  );\n};\n\nexport default SkeletonLoading;\n","import styled from 'styled-components';\n\nconst Page = styled.section`\n  padding-bottom: 150px;\n`;\n\nconst Loading = styled.div`\n  margin: 6rem auto;\n  width: 60px;\n`;\n\nexport const PageStyle = {\n  Page,\n  Loading,\n};\n","import styled from 'styled-components';\nimport { theme } from '../../../styles/theme';\n\nconst Component = styled.div`\n  padding-top: 1rem;\n  border-bottom: 1px solid ${theme.color.GRAY1};\n`;\n\nconst TitleWrap = styled.div`\n  padding: ${theme.padding.BODY};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 16px;\n  font-weight: 700;\n  color: ${theme.color.BLACK};\n`;\n\nconst DeleteAll = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${theme.color.GRAY5};\n`;\n\nconst Keywords = styled.div`\n  padding: 2rem 0 3rem;\n  overflow: auto;\n`;\n\nconst KeywordsWrap = styled.div`\n  padding: ${theme.padding.BODY};\n`;\n\nconst Keyword = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 16px;\n  margin: 0 10px 10px 0;\n  border: 1px solid ${theme.color.GRAY2};\n  border-radius: 30px;\n`;\n\nconst KeywordText = styled.p`\n  font-size: 14px;\n  font-weight: 400;\n  color: ${theme.color.BLACK};\n`;\n\nconst DeleteIcon = styled.div`\n  margin-left: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 12px;\n  height: 12px;\n  position: relative;\n\n  &::before,\n  &::after {\n    position: absolute;\n    content: '';\n    display: block;\n    width: 10px;\n    height: 1px;\n    background: ${theme.color.GRAY5};\n    transform: rotate(45deg);\n  }\n\n  &::after {\n    transform: rotate(-45deg);\n  }\n`;\n\nexport const ComponentStyle = {\n  Component,\n  TitleWrap,\n  Title,\n  DeleteAll,\n  Keywords,\n  KeywordsWrap,\n  Keyword,\n  KeywordText,\n  DeleteIcon,\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { ComponentStyle as S } from './RecentSearch.styled';\nimport { localStorageAPI } from '../../../constants/localStorage';\nimport CommonButton from '../../common/motion/CommonButton/CommonButton';\nimport { useRouter } from '../../../hooks/useRouter';\nimport { ROUTE_PATH } from '../../../constants/path';\n\ninterface RecentSearchProps {\n  recentSearch: string | null;\n  onChangeRecentSearch: (newRecentSearch: string) => void;\n}\n\nconst RecentSearch = ({ recentSearch, onChangeRecentSearch }: RecentSearchProps) => {\n  /**\n   * 최근 검색어를 보여주는 컴포넌트입니다.\n   */\n\n  const [keywords, setKeywords] = useState<string[] | null>(null);\n  const { navigate } = useRouter();\n\n  useEffect(() => {\n    setKeywords(\n      recentSearch !== null\n        ? recentSearch?.split(localStorageAPI.recentSearch.separateSymbol)\n        : null\n    );\n  }, [recentSearch]);\n\n  const handleRemoveKeyword = useCallback(\n    (index: number) => {\n      setKeywords((prevKeywords) => {\n        if (prevKeywords === null) return prevKeywords;\n        const newKeywords = [...prevKeywords];\n        newKeywords.splice(index, 1);\n\n        onChangeRecentSearch(newKeywords.join(localStorageAPI.recentSearch.separateSymbol));\n        return newKeywords;\n      });\n    },\n    [onChangeRecentSearch]\n  );\n\n  const handleRemoveAllKeywords = useCallback(() => {\n    setKeywords([]);\n    onChangeRecentSearch('');\n  }, [onChangeRecentSearch]);\n\n  const handleClickKeyword = useCallback(\n    (keyword: string) => {\n      navigate(ROUTE_PATH.searchDetail.replace(':keyword', keyword));\n    },\n    [navigate]\n  );\n\n  if (keywords === null || keywords.length === 0) return <></>;\n\n  return (\n    <S.Component>\n      <S.TitleWrap>\n        <S.Title>최근 검색어</S.Title>\n        <CommonButton onClick={handleRemoveAllKeywords}>\n          <S.DeleteAll>모두 지우기</S.DeleteAll>\n        </CommonButton>\n      </S.TitleWrap>\n\n      <S.Keywords>\n        <S.KeywordsWrap>\n          {keywords.map((keyword, index) => (\n            <CommonButton key={index}>\n              <S.Keyword>\n                <S.KeywordText\n                  onClick={() => {\n                    handleClickKeyword(keyword);\n                  }}\n                >\n                  {keyword}\n                </S.KeywordText>\n                <S.DeleteIcon\n                  onClick={() => {\n                    handleRemoveKeyword(index);\n                  }}\n                />\n              </S.Keyword>\n            </CommonButton>\n          ))}\n        </S.KeywordsWrap>\n      </S.Keywords>\n    </S.Component>\n  );\n};\n\nexport default RecentSearch;\n","import styled, { css } from 'styled-components';\nimport { theme } from '../../../styles/theme';\n\nconst Component = styled.div`\n  padding-top: 2rem;\n`;\n\nconst TitleWrap = styled.div`\n  padding: ${theme.padding.BODY};\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-end;\n`;\n\nconst Title = styled.h1`\n  font-size: 16px;\n  font-weight: 700;\n  color: ${theme.color.BLACK};\n`;\n\nconst UpdateTime = styled.p`\n  margin-left: 10px;\n  font-size: 13px;\n  font-weight: 500;\n  color: ${theme.color.GRAY5};\n`;\n\nconst Ul = styled.ul`\n  padding: 10px ${theme.padding.DEFAULT} 0;\n`;\n\nconst List = styled.li`\n  cursor: pointer;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 15px 0;\n  // border-bottom: 1px solid ${theme.color.GRAY1};\n`;\n\nconst keywordText = css`\n  font-size: 15px;\n  font-weight: 500;\n`;\n\nconst Rank = styled.p<{ $color?: string }>`\n  ${keywordText};\n  text-align: left;\n  width: 32px;\n  color: ${({ $color }) => ($color ? $color : theme.color.BLACK)};\n`;\n\nconst Keyword = styled.p`\n  ${keywordText};\n  color: ${theme.color.BLACK};\n`;\n\nexport const ComponentStyle = {\n  Component,\n  TitleWrap,\n  Title,\n  UpdateTime,\n  Ul,\n  List,\n  Rank,\n  Keyword,\n};\n","export const getTwoDigitString = (number: number) => {\n  if (number >= 10 || number < 0) return number.toString();\n\n  return `0${Math.round(number)}`;\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { SearchWordRankingProps } from '../../../types/search';\nimport { ComponentStyle as S } from './SearchWordRanking.styled';\nimport { getTwoDigitString } from '../../../utils/getTwoDigitString';\nimport { useRouter } from '../../../hooks/useRouter';\nimport { ROUTE_PATH } from '../../../constants/path';\nimport { theme } from '../../../styles/theme';\n\ninterface SearchWordRankingComponentProps {\n  words: SearchWordRankingProps | undefined;\n  onClickKeywordRank: (keyword: string) => void;\n}\n\nconst SearchWordRanking = ({ words, onClickKeywordRank }: SearchWordRankingComponentProps) => {\n  const [resetTime, setResetTime] = useState<Date>(new Date());\n  const { navigate } = useRouter();\n\n  useEffect(() => {\n    if (words === undefined) return;\n\n    setResetTime(new Date(words.resetTime));\n  }, [words]);\n\n  const handleClickKeyword = useCallback(\n    (keyword: string) => {\n      onClickKeywordRank(keyword);\n      navigate(ROUTE_PATH.searchDetail.replace(':keyword', keyword));\n    },\n    [onClickKeywordRank, navigate]\n  );\n\n  if (words === undefined) return <></>;\n\n  return (\n    <S.Component>\n      <S.TitleWrap>\n        <S.Title>지금 많이 찾는 검색어</S.Title>\n        <S.UpdateTime>\n          {getTwoDigitString(resetTime.getMonth())}.{getTwoDigitString(resetTime.getDate())}{' '}\n          업데이트\n        </S.UpdateTime>\n      </S.TitleWrap>\n\n      <S.Ul>\n        {words.data.map((keyword, index) => (\n          <S.List\n            key={index}\n            onClick={() => {\n              handleClickKeyword(keyword);\n            }}\n          >\n            <S.Rank $color={index < 3 ? theme.color.SIGNATURE : theme.color.BLACK}>\n              {index + 1}\n            </S.Rank>\n            <S.Keyword>{keyword}</S.Keyword>\n          </S.List>\n        ))}\n      </S.Ul>\n    </S.Component>\n  );\n};\n\nexport default SearchWordRanking;\n","import CommonPageAnimation from '../../components/common/motion/CommonPageAnimation/CommonPageAnimation';\nimport { useSearch } from '../../hooks/search/useSearch';\nimport { PageStyle as S } from './SearchPage.styled';\nimport RecentSearch from '../../components/search/RecentSearch/RecentSearch';\nimport SearchWordRanking from '../../components/search/SearchWordRanking/SearchWordRanking';\nimport SkeletonLoading from '../../components/skeleton/common/SkeletonLoading';\n\nconst SearchPage = () => {\n  const { searchWordRankingQuery, getRecentSearch, updateRecentSearch, addRecentSearch } =\n    useSearch();\n\n  const handleChangeRecentSearch = (newRecentSearch: string) => {\n    updateRecentSearch(newRecentSearch);\n  };\n\n  const handleClickKeywordRank = (keyword: string) => {\n    addRecentSearch(keyword);\n  };\n\n  if (!searchWordRankingQuery.isSuccess)\n    return (\n      <S.Page>\n        <S.Loading>\n          <SkeletonLoading />\n        </S.Loading>\n      </S.Page>\n    );\n\n  return (\n    <CommonPageAnimation>\n      <S.Page>\n        <RecentSearch\n          recentSearch={getRecentSearch()}\n          onChangeRecentSearch={handleChangeRecentSearch}\n        />\n        <SearchWordRanking\n          words={searchWordRankingQuery.data}\n          onClickKeywordRank={handleClickKeywordRank}\n        />\n      </S.Page>\n    </CommonPageAnimation>\n  );\n};\n\nexport default SearchPage;\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","_ref","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","forceRender","useContext","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useState","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement","_jsx","motion","div","motionStyle","pageOpen","animate","transition","exit","position","SkeletonLoading","_jsxs","display","autoPlay","muted","loop","playsInline","poster","src","type","PageStyle","Page","styled","section","_templateObject","_taggedTemplateLiteral","Loading","_templateObject2","ComponentStyle","Component","theme","color","GRAY1","TitleWrap","padding","BODY","Title","h1","_templateObject3","BLACK","DeleteAll","p","_templateObject4","GRAY5","Keywords","_templateObject5","KeywordsWrap","_templateObject6","Keyword","_templateObject7","GRAY2","KeywordText","_templateObject8","DeleteIcon","_templateObject9","recentSearch","onChangeRecentSearch","keywords","setKeywords","navigate","useRouter","split","localStorageAPI","separateSymbol","handleRemoveKeyword","index","prevKeywords","newKeywords","join","handleRemoveAllKeywords","handleClickKeyword","keyword","ROUTE_PATH","searchDetail","replace","_Fragment","S","CommonButton","onClick","UpdateTime","Ul","ul","DEFAULT","List","li","keywordText","css","Rank","$color","getTwoDigitString","number","toString","Math","round","words","onClickKeywordRank","resetTime","setResetTime","Date","getMonth","getDate","data","SIGNATURE","SearchPage","searchWordRankingQuery","getRecentSearch","updateRecentSearch","addRecentSearch","useSearch","isSuccess","CommonPageAnimation","RecentSearch","newRecentSearch","SearchWordRanking"],"sourceRoot":""}